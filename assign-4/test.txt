struct st1 {
  f1: int,
  f2: &int
}

struct st2 {
  f1: &st1
}

extern e1: (int, &int, int, &st1, int, &int, int) -> int;
extern e2: (&st2, int, int, int, &int, int, int, &int) -> &st2;

let g1: int;
let g2: &st2;
let g3: int;
let g4: &st1;
let g5: int;
let g6: &int;
let g7: int;
let g8: &int;

fn main() -> int {
  let id0: &(int, &st2, int) -> int, id1: &(&int, int, int, &int) -> int, id2: &int, id3: &&&st2, id4: &(int, &st1) -> int, id5: &&&&st1, id6: &&int, id7: &&&st1, id8: &&st2, id9: &int, id10: &&int, id11: &&&st1, id13: &&st1, id12: &st1 = *id13, id15: &&&&int, id14: &&&int = *id15, id16: &&&st1, id17: &&&int, id18: &&&int, id19: &&(int, &st1) -> int, id20: &&&&(int, &st2, int) -> int, id21: &&&&(int, &st2, int) -> int, id22: &&&&int, id23: &&&int = id14, id24: &&int, id25: &&(&int, int, int, &int) -> int, id26: &&&(&int, int, int, &int) -> int, id27: &(&int, int, int, &int) -> int, id28: &st1, id29: &&int = *id22[id12.f1], id30: &st2, id31: &st1, id32: &&st2, id33: &st2, id34: &(int, &st1) -> int, id35: &&&&int, id36: &&&st1, id37: &&&&st1, id38: &&&&st1, id41: &&&&&&(int, &st1) -> int, id40: &&&(int, &st1) -> int = id41[0][id9[7]][g5], id39: &(int, &st1) -> int = *id40[id0(g7, g2, 6)], id42: &&st1, id43: &&st1, id44: &(&int, int, int, &int) -> int, id45: &&(int, &st1) -> int, id46: &&st2, id47: &st2, id48: &&st1 = id7[**id6], id49: &&&&int, id50: &&st2, id51: &&&&st1, id52: &&(int, &st1) -> int, id53: &(int, &st2, int) -> int, id54: &&&st2;
  f3(id0(id1(g6, 0, g3, id2) >= g4.f1, **id3, g7 - id4(4, g4)), nil);
  while 3 {
    if *id2 {
      f3(10, id5[0][id1(id2, 1, g5, g6)][g7]);
      f5(*id6, g3, id7[g1][*g8].f1, g4.f2);
      g2 = id8[e1(*id9, id6[8], e1(9, id2, 6, g4, g1, g8, 5), g4, e1(6, id9, g3, g4, g1, g8, g5), id9, id10 == id6)];
      f3(id11[g7][*g8].f1, id12);
      id6 = new &int id14[6][e1(0, id2, g3, g4, g3, id9, 9)][(g7 * g7) - 3];
      *id16 = new &st1;
      **id17 = new int;
    }
    else {
      id18[g7][id19[4](*id2, g2.f1)] = new int id20[g3][f5(g8, g1, 2, g6)] != *id21[4];
      g7 = g5;
      e1(g3, *id22[3][g5 - g7], -g3, g4, 2, id23[id2 == id9][**id10], **id18[g3]);
      g3 = e1(5, **id18, (4 + 3) > *id2, **id7, g6[id24 != id24], id9, g5);
      g8 = new int id8[g5].f1.f1;
    }
    id25[4](id2, *id17[9][g1], id26[8][g6[9]](id23[5][*g8], f3(id27(g6, 6, 2, g6), id28), -g1, id29[1 >= 2]), id22[g5][f4(10, g2, 7)][f4(*g6, id30, id28.f1)]);
    id2 = new int e1(g6[6 < 7], id2, id28.f2 != *id10, id11[0][*g8], f4(id31.f1, *id32, *g8), g8, g6[f4(g1, id33, g7)]);
    if g7 {
      f3(id34((id2 == g8) >= g6[9], **id7), id31);
      id23[*id6 != id24[g3]] = new &int id35[3][*g6] != **id22;
      g1 = id29[9][*id9] != (*id17 != *id17);
      id11[6][g6[2]].f1 = id10[g4.f1] == id2;
      g8 = new int;
      e1(id35[1][g8[g3]] == id6, nil, f3(-g5, *id36[5]), id37[g1][id24 != id6][-g8[1]], g7, id9, 6);
      f3(e1(g5, id2, -8 == f4(g5, id30, g1), id31, g3, id14[g5][g7 / g1], id6[g5][g3]), id38[8][g8 != g6][0]);
      id39(e1(**id6, g6, e1(g7, *id29, *id9, *id42, *g8, id6[7], e1(7, g6, g3, id28, g5, id2, 6)), id13[id4(0, g4)], id6[g7][4], g8, *id6[2]), id31);
    }
    else {
      g3 = e1(9, id33.f1.f2, f3(5, id43[g7]), *id36[g7], *id29[g5], g2.f1.f2, id28.f2[id44(id9, g5, g1, g6)]);
      f3(id45[g4.f1](id24[1][10], id46[0].f1), id36[g3 >= g3][*g4.f2]);
      id45[5](6, **id7);
      g1 = 4;
      f4(e1(g1 >= e1(2, g6, g1, g4, g3, g6, g3), *id10, id6[g7] == g8, *id11[5], id29[g5][id9 == g6], id29[id9[g5]], e1(g6[3], g6, g7, id12, *g6, id29[g1], f4(8, id47, 6))), *id8, e1(*id24[g7], id24[f4(10, id30, g3)], id31.f2[*g8], id31, 4, id9, *g6));
      id43[2].f2[id48[0].f1] = g5;
      id6 = new &int e1(f3(e1(g1, g8, 7, id31, g1, g8, 8), *id42), *id18[6], 5, **id16, id45[g7](7, g4), g2.f1.f2, id2[1] != (7 == g5));
      g8 = *id49[3][g5 - g7];
      e1(f3(id12.f2[f5(id9, g3, g5, g6)], id28), *id23[id50 != id50], g8[e1(5, *id29, g8[4], id43[g5], 4, *id10, e1(9, g6, g3, id28, 0, g6, g7))], id16[*g8][id13[5].f1], *g6, *id24, *id24[4]);
      e1(*id17[9][g1], id22[g7][10][*id2 >= g3], 5, id51[10][g5 + g1][id52[1](-g1, id48[g1])], *id10[g4.f1], g6, g7);
    }
  }
  e1(10, *id14[2 >= 10], 0, id12, **id23[g1], g6, id28.f2[**id10]);
  f4(g1, *id8, id16[g7][*id9].f1);
  id24 = new &int **id22 != id49[g1][id12.f1];
  f4(3, nil, g6[f4(g1, id30, 6)] < *id29[g3]);
  f4(-id53(3, id50[g3], f5(id9, g3, g3, id2)), *id54[*id9], 2);
  *id9 = -g1;
  return id31.f1;
}

fn f3(p: int, q: &st1) -> int {
  return p + *q.f2;
}

fn f4(p: int, q: &st2, r: int) -> int {
  return (p + q.f1.f1) + r;
}

fn f5(p: &int, q: int, r: int, s: &int) -> int {
  return ((*p + q) + r) + *s;
}