.data

.globl g
g: .zero 8


.globl pt
pt: .zero 8


.globl ptf
ptf: .zero 8


.globl pts
pts: .zero 8


out_of_bounds_msg: .string "out-of-bounds array access"
invalid_alloc_msg: .string "invalid allocation amount"
        
.text

.globl main
main:
  pushq %rbp
  movq %rsp, %rbp
  subq $48, %rsp
  movq $0, -8(%rbp)
  movq $0, -16(%rbp)
  movq $0, -24(%rbp)
  movq $0, -32(%rbp)
  movq $0, -40(%rbp)
  jmp main_entry

main_entry:
  movq $11, -24(%rbp)
  movq $12, -32(%rbp)
  movq -24(%rbp), %rdi
  movq $2, %rsi
  movq $3, %rdx
  movq -32(%rbp), %rcx
  movq $5, %r8
  movq $6, %r9
  pushq $9
  pushq $8
  pushq -40(%rbp)
  subq $8, %rsp
  call exfun
  addq $32, %rsp
  movq $33, -24(%rbp)
  movq $1, %rdi
  call exfun2
  movq %rax, -8(%rbp)
  movq -8(%rbp), %r8
  movq %r8, -24(%rbp)
  movq $22, -24(%rbp)
  movq $1, %rdi
  movq $2, %rsi
  movq $3, %rdx
  call exfun3
  movq %rax, -16(%rbp)
  movq -16(%rbp), %r8
  movq %r8, -32(%rbp)
  movq $1, %rax
  jmp main_epilogue

main_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.out_of_bounds:
  lea out_of_bounds_msg(%rip), %rdi
  call _cflat_panic

.invalid_alloc_length:
  lea invalid_alloc_msg(%rip), %rdi
  call _cflat_panic
        
