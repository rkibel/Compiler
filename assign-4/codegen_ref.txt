.data

.globl a
a: .zero 8


.globl f_
f_: .quad "f"


out_of_bounds_msg: .string "out-of-bounds array access"
invalid_alloc_msg: .string "invalid allocation amount"
        
.text

.globl f
f:
  pushq %rbp
  movq %rsp, %rbp
  subq $16, %rsp
  movq $0, -8(%rbp)
  movq $0, -16(%rbp)
  jmp f_entry

f_entry:
  movq $2, -16(%rbp)
  movq $3, %rax
  jmp f_epilogue

f_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.globl main
main:
  pushq %rbp
  movq %rsp, %rbp
  subq $48, %rsp
  movq $0, -8(%rbp)
  movq $0, -16(%rbp)
  movq $0, -24(%rbp)
  movq $0, -32(%rbp)
  movq $0, -40(%rbp)
  movq $0, -48(%rbp)
  jmp main_entry

main_entry:
  movq f_(%rip), %r8
  movq %r8, -40(%rbp)
  subq $8, %rsp
  pushq a(%rip)
  call *-24(%rbp)
  movq %rax, -8(%rbp)
  addq $16, %rsp
  jmp main_lbl1

main_lbl1:
  movq -8(%rbp), %r8
  movq %r8, -48(%rbp)
  subq $8, %rsp
  pushq $55
  call *-32(%rbp)
  addq $16, %rsp
  jmp main_lbl2

main_lbl2:
  pushq -48(%rbp)
  pushq $58
  pushq $57
  pushq $56
  call *-40(%rbp)
  movq %rax, -16(%rbp)
  addq $32, %rsp
  jmp main_lbl3

main_lbl3:
  movq -16(%rbp), %r8
  movq %r8, -48(%rbp)
  movq $0, %rax
  jmp main_epilogue

main_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.out_of_bounds:
  lea out_of_bounds_msg(%rip), %rdi
  call _cflat_panic

.invalid_alloc_length:
  lea invalid_alloc_msg(%rip), %rdi
  call _cflat_panic
        
